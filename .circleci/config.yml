# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.10

    working_directory: /go/src/github.com/warren-veerasingam/terraform-switcher

    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: go get -v -t -d ./...
      - run: go vet -tests=false ./...
      - run: go test -v ./...
      - run: mkdir -p build
      - run: go build -v -o build/tfswitch

      - persist_to_workspace:
          root: build
          paths: tfswitch

  test:
    docker:
      - image: "circleci/ruby:2.5-stretch"

    steps:
      - run: ls

      - attach_workspace:
          at: build

  release:
    docker:
      - image: circleci/golang:1.10
    branches:
      only:
        - master

    steps:
      - checkout
      - run: ls
      - run: git status
      - run: git tag 0.0.${CIRCLE_BUILD_NUM}
      - run: git config --global user.email "warren.veerasingam@gmail.com"
      - run: git config --global user.name "warren-veerasingam"
      - run: git push origin 0.0.${CIRCLE_BUILD_NUM}

  deployment:
    docker:
      - image: circleci/golang:1.10
    branches:
      only:
        - goreleaser
    environment:
      - MAJOR: "0"
      - MINOR: "1"


    # tag:
    #   tag: /v[0-9]+(\.[0-9]+)*(-.*)*/
    #   owner: warren-veeraingam
       - run: curl -sL https://git.io/goreleaser | bash
    # docker:
    #   - image: circleci/golang:1.10

    # steps:
    #   - checkout
    #   - run: ls
    #   - run: git status
    #   - run: git tag 0.0.${CIRCLE_BUILD_NUM}
    #   - run: git config --global user.email "warren.veerasingam@gmail.com"
    #   - run: git config --global user.name "warren-veerasingam"
    #   - run: git push origin 0.0.${CIRCLE_BUILD_NUM}
      

workflows:
  version: 2

  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      # - deployment:
      #     requires:
      #       - test
      #     filters:
      #       branches:
      #         only: master
      - deployment:
          requires:
            - test
          # filters:
          #   branches:
          #     only: master
